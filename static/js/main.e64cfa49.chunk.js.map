{"version":3,"sources":["fire.js","Login.js","Hero.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","className","type","autoFocus","required","value","onChange","e","target","onClick","Hero","handleLogout","App","useState","user","setUser","setEmailError","setPasswordError","clearErrors","authListener","auth","onAuthStateChanged","useEffect","signOut","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e64cfa49.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCfb0rUOCyqjQ4OvgKBdNsze_8qRnEFv0Q\",\r\n    authDomain: \"simple-user-login-screen.firebaseapp.com\",\r\n    projectId: \"simple-user-login-screen\",\r\n    storageBucket: \"simple-user-login-screen.appspot.com\",\r\n    messagingSenderId: \"740450830627\",\r\n    appId: \"1:740450830627:web:5e88798aeb47b249832496\"\r\n  };\r\n  // Initialize Firebase\r\n  const fire = firebase.initializeApp(firebaseConfig);\r\n\r\n  export default fire;","import React from 'react';\r\n\r\nconst Login = (props) => {\r\n\r\n    const { \r\n        email, \r\n        setEmail, \r\n        password, \r\n        setPassword, \r\n        handleLogin, \r\n        handleSignup, \r\n        hasAccount, \r\n        setHasAccount, \r\n        emailError, \r\n        passwordError\r\n    } = props;\r\n\r\n    return(\r\n        <section className=\"login\">\r\n            <div className=\"loginContainer\">\r\n                <label>Username</label>\r\n                <input \r\n                    type=\"text\" \r\n                    autoFocus \r\n                    required \r\n                    value={email} \r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <p className=\"errorMsg\">{emailError}</p>\r\n                <label>Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <p className=\"errorMsg\">{passwordError}</p>\r\n                <div className=\"btnContainer\">\r\n                    {hasAccount ? (\r\n                        <>\r\n                            <button onClick={handleLogin}>Sign in</button>\r\n                            <p>Don't have an account ?{\" \"} \r\n                                <span onClick={() => setHasAccount(!hasAccount)}>Sign up</span>\r\n                            </p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <button onClick={handleSignup}>Sign up</button>\r\n                            <p>Have an account ? {\" \"}\r\n                                <span onClick={() => setHasAccount(!hasAccount)}>Sign in</span>\r\n                            </p>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Hero = ({handleLogout}) => {\r\n    return(\r\n        <section className=\"hero\">\r\n            <nav>\r\n                <h2>Welcome</h2>\r\n                <button onClick={handleLogout}>Logout</button>\r\n            </nav>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Hero;","import React, {useState, useEffect} from 'react';\nimport fire from './fire';\nimport Login from './Login';\nimport Hero from './Hero';\nimport './App.css';\n\nconst App = () => {\n  const [user, setUser] = useState('');\n  const [email,setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInputs = () => {\n    setEmail('');\n    setPassword('');\n  }\n\n  const clearErrors = () => {\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  const handleLogin = () => {\n    clearErrors();\n    fire\n      .auth()\n      .signInWithEmailAndPassword(email,password)\n      .catch((err) => {\n        switch(err.code){\n          case \"auth/invalid\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleSignup = () => {\n    clearErrors();\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(email,password)\n      .catch((err) => {\n        switch(err.code){\n          case \"auth/email-already-in-use\":\n          case \"auth/invalid-email\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wreak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      });\n  };\n\n  const handleLogout = () => {\n    fire.auth().signOut();\n  };\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if(user){\n        clearInputs();\n        setUser(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {user ? (\n        <Hero handleLogout={handleLogout}/>\n      ) : (\n        <Login \n          email={email} \n          setEmail={setEmail} \n          password={password} \n          setPassword={setPassword} \n          handleLogin={handleLogin}\n          handleSignup={handleSignup}\n          hasAccount={hasAccount}\n          setHasAccount={setHasAccount}\n          emailError={emailError}\n          passwordError={passwordError}\n        /> \n      )}  \n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}